<?php

namespace app\models;

use Yii;

/**
 * This is the model class for table "account".
 *
 * @property integer $id
 * @property string $username
 * @property string $password
 * @property string $fullname
 * @property integer $type
 *
 * @property Hours[] $hours
 */
class Account extends \yii\db\ActiveRecord implements \yii\web\IdentityInterface
{
    
    public $authKey;
    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'account';
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['username', 'password', 'fullname', 'type'], 'required'],
            [['type'], 'integer'],
            [['username', 'password', 'fullname'], 'string', 'max' => 100],
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'username' => 'Username',
            'password' => 'Password',
            'fullname' => 'نام کاربری',
            'type' => 'Type',
        ];
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getHours()
    {
        return $this->hasMany(Hours::className(), ['user_id' => 'id']);
    }
    public function beforeSave($insert)
    {
      
       

        $this->password=yii::$app->security->generatePasswordHash($this->password);


        return parent::beforeSave($insert); // TODO: Change the autogenerated stub
    }
    public static function findIdentity($id){
        $model=self::findOne($id);
        return $model ?new static($model):null;

    }
    public static function findIdentityByAccessToken($token, $type = null){
        return null;

    }
    public function getId(){
        return $this->id;

    }
    public function getAuthKey(){
        return $this->authKey;
    }
    public function validateAuthKey($authKey){
        return $this->authKey===$authKey;
    }
    public  function validatePassword($password){
       
        return Yii::$app->security->validatePassword($password,$this->password );

    }
    public function status($user_id=null){
        return Hours::findOne([
            'user_id' => ($user_id ? $user_id : $this->id),
            'logout' => 0,
        ]) != null ? 'آنلاین' : 'آفلاین';
    }
    
}
